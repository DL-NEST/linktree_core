# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

# 作业的阶段列表及其执行顺序
stages:
  - build
  - test
  - deploy

# 此作业在首先运行的生成阶段运行。
build-job:
  stage: build
  tags:
    - test_golang
  script:
    - echo "Compiling the code..."
    - go env -w GO111MODULE=on && go env -w GOPROXY=https://goproxy.cn
    - cd deploy/docker && go build -o ./linktree-ctl linktree_core
    - echo "Compile complete."

unit-test-job:   # 此作业在测试阶段运行。
  stage: test    # 仅当构建阶段的作业成功完成时，它才会启动。
  tags:
    - test_golang
  script:
    - echo "单元测试"

# 此作业在部署阶段运行。
deploy-job:
  stage: deploy  # 仅当测试阶段的两个作业都成功完成时，它才会运行。
  environment: production
  tags:
    - shell_golang
  script:
    - echo "Deploying application..."
    - go env -w GO111MODULE=on && go env -w GOPROXY=https://goproxy.cn
    - cd deploy/docker && go build -o ./linktree-ctl linktree_core
    - if [ $(docker ps -aq --filter name=linktree_core) ];then docker rm -f linktree_core;fi
    - docker build -t linktree_core .
    - docker run --name linktree_core -d -p 6666:5523 linktree_core